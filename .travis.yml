###
### .travis.yml
###

# ----------------------------- DEFINE STAGES IN CI ---------------------------- #

# these are executed in order.  each must pass for the next to be run
stages:
  - name: smoke # this ensures a "user" install works properly
    if: branch != master
  - name: precache # warm up cache for default Node.js version
    if: branch != master
  - name: lint # lint code and docs
    if: branch != master
  - test # all tests
  

# -------------------------- CD ENVIRONMENT SETTINGS ------------------------- #

# defaults
language: node_js
node_js: 
  - 'stable'
addons:
  apt:
    packages:
      - libnotify-bin

# ---------------------- INSTALL DEPENDENCIES CI SCRIPT ---------------------- #

# this avoids compilation in most cases (where we don't need it)
install: npm ci --ignore-scripts

# `nvm install` happens before the cache is restored, which means
# we must install our own npm elsewhere (`~/npm`)
# ref: https://github.com/mochajs/mocha/blob/master/.travis.yml
# ref: https://boneskull.com/mocha-and-travis-ci-build-stages/

before_script: npm install -g npm@5.8.0
before_install: |
  [[ ! -x ~/npm/node_modules/.bin/npm ]] && {
    # caching feature creates `~/npm` for us
    cd ~/npm && npm install npm
    cd -
  } || true
  # avoids bugs around https://github.com/travis-ci/travis-ci/issues/5092
  export PATH=~/npm/node_modules/.bin:$PATH

# ------------------------------ CACHING CI ENV ------------------------------ #

# this avoids compilation in most cases (where we don't need it)
cache:
  directories:
    - ~/.npm # cache npm's cache
    - ~/npm # cache latest npm

# ------------------------ DEFINE JOB IN EACH CI STAGE ----------------------- #

jobs:
  include:
    # Jobs lacking a stage will use the same stage as the previous job in the list; 
    # if there is no previous job, the default stage is test
    # TEST STAGE
    - &test 
      stage: test
      install:
        - npm install -g mocha-webpack
        - npm install
      script: npm run test
      before_install: true
      after_success: npm run coverage
      cache:
        directories:
          - ~/.npm
          - node_modules # npm install, unlike npm ci, doesn't wipe node_modules
    - <<: *test
      node_js: '8'
      if: branch != master

    - <<: *test
      node_js: '10'
      if: branch != master

    # LINT STAGE
    #  linting code - that make code linting and fail which has any issue about code syntax 
    - stage: lint
      before_install: true
      install:
      - npm install -g standard
      - npm install -g snazzy
      script: npm run lint

    # SMOKE TEST STAGE
    - &smoke
      stage: smoke
      env: null
      before_install: true
      install: 
        - npm install -g mocha
        - npm install --production --no-shrinkwrap
      script: mocha --no-config --reporter spec test/sanity/sanity.spec.js
      cache:
        directories:
          - ~/.npm
          - node_modules # npm install, unlike npm ci, doesn't wipe node_modules

    - <<: *smoke
      node_js: '10'

    - <<: *smoke
      node_js: '8'

    # PRECACHE STAGE 
    # - script = true means it works on this stage and everything warmed-up OK
    - stage: precache
      script: true

after_success: npm run coverage

# --------------------------------- CI SETTINGS --------------------------------- #

services: mongodb
cache:
  directories:
    - ~/.npm
sudo: false
install: true

# ----------------------------- DEPLOYMENT SCRIPT ---------------------------- #

before_deploy:
  - rm -rf node_modules # omit from the tarball, since we skip cleanup

deploy:
  provider: heroku
  api_key:
    secure: e3K1aReDImTyM4piHRbAfq2E3V2bXMIXAejSLpoF+N1/xCkiQ+jKAAmLO6LEDhhLJNxBTLYVuHgCdH3VgMFNRmoLtgHuzeoqEEcQGY0RwzTxve9srkZz1bGJfLOb0OlVSM478CQ7wcPgQuLo0Wb7ZtPE9MzVgB6/jnFB6jg6ZKv5e17V3zYaOzCoC0pm8LKajx20nNYONnHdYg0TZyX296kZvkymhYHVw6EPnuTbnlCCiwUXFe/JlbwERwrvt190eImRnqMmdCL55CtS5K/IQnsub1qg+tPxnSnwOQqDMqp25taC5YGsAyqVBlaPPdG30bG0/mxExeQo94k2Z4e5t0msEatMmTU0OH+XZyFdRmnHyjHUaFvzHPJnBMjiwWwjFpIBRfSMRcaObXIi0z+y1b4omR30Yt7+wnUvAZFOvgoZx3lOf0DD2zZ0E1yf9Lumt8IS+wujfiTZVJK1cdsHLLilO+9WsS2wDkumijxnjbI2GhUGXCC6dOIzDGhIO+LNartLepa5Lpu/0nXWNxPs9aUwXofsN4+uMXjkDGo/e9445XEbuAxVrB6h1sSGCBr682l2ZPSVB116eP0nejSjN24H/uTNbXkejBecgG/XS7ZPOrY16kgVtUN5Fe3OpkBOv8ig/DQDmTPasAkcdTlfaVyhxkJULU5WBGKRo7BHNC8=
  app: graphql-ec
  skip_cleanup: true

# ----------------------------------- HOOKS ---------------------------------- #

notifications:
  webhooks: https://hooks.slack.com/services/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
