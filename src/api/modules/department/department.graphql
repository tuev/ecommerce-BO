type Department {
  id: ID!
  name: String!
  slug: String!
  description: String!
  images: [Image!]
  category: [Category!]!
  brand: [Brand!]!
  product: [Product!]!
}

enum DEPARTMENT_ORDER {
  id_ASC
  id_DESC
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
}

input UpdateDepartmentFields {
  name: String!
  description: String
  # images: [Image]!
  # category: [Category]!
  # brand: [Brand]!
  # product: [Product]!
}

extend type Query {
  department(id: ID!): Department!
  departments(
    filter: String
    order: DEPARTMENT_ORDER = "name_ASC"
  ): [Department]!
}

extend type Mutation {
  addDepartment(department: UpdateDepartmentFields!): Department!
  updateDepartment(id: ID, data: UpdateDepartmentFields!): Department!
  deleteDepartment(id: ID!): Department!
}

extend type Subscription {
  departmentSubscription: Department
}
