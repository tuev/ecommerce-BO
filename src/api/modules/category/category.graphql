type Category {
  id: ID!
  name: String!
  slug: String!
  description: String!
  images: [Image!]
  brand: [Brand!]
  department: [Department!]
  product: [Product!]
}

enum CATEGORY_ORDER {
  id_ASC
  id_DESC
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
}

input UpdateCategoryFields {
  name: String!
  description: String
  # images: [Image]!
  # brand: [Brand]!
  # department: [Department]!
}

extend type Query {
  category(id: ID!): Category!
  categories(filter: String, order: CATEGORY_ORDER = "name_ASC"): [Category]!
}

extend type Mutation {
  addCategory(category: UpdateCategoryFields!): Category!
  updateCategory(id: ID, data: UpdateCategoryFields!): Category!
  deleteCategory(id: ID!): Category!
}

extend type Subscription {
  categorySubscription: Category
}
