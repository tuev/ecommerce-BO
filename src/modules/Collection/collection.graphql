type Collection {
  id: ID!
  name: String!
  slug: Slug!
  description: String
  brands: [Brand]
  categories: [Category]
  SKUs: [SKU]
  images: [Image]
}

input CollectionInput {
  name: String!
  description: String
}

extend type Query {
  collections: [Collection]!
  collection(id: ID! @validId(type: CollectionId)): Collection!
}

extend type Mutation {
  addCollection(
    input: CollectionInput!
    slug: String
    brands: [ID!] @validId(type: BrandId)
    categories: [ID] @validId(type: CategoryId)
    SKUs: [ID] @validId(type: SKUId)
    images: [ID] @validId(type: ImageId)
  ): Collection!
  updateCollection(
    input: CollectionInput!
    id: ID!
    brands: [ID!] @validId(type: BrandId)
    categories: [ID] @validId(type: CategoryId)
    SKUs: [ID] @validId(type: SKUId)
    images: [ID] @validId(type: ImageId)
  ): Collection!
  deleteCollection(id: ID! @validId(type: CollectionId)): Boolean!
}

extend type Subscription {
  collectionAdded: Collection!
  collectionUpdated: Collection!
  collectionDeleted: ID!
}
