type Category {
  id: ID!
  name: String!
  slug: Slug!
  description: String
  Brands: [Brand]
  Collections: [Collection]
  SKUs: [SKU]
  Images: [Image]
}

input CategoryInput {
  name: String!
  description: String
}

extend type Query {
  categories: [Category]!
  category(id: ID! @validId(type: CategoryId)): Category
}

extend type Mutation {
  addCategory(
    input: CategoryInput
    slug: String
    brands: [ID] @validId(type: BrandId)
    collections: [ID] @validId(type: CollectionId)
    SKUs: [ID] @validId(type: SKUId)
    images: [ID] @validId(type: ImageId)
  ): Category!
  updateCategory(
    input: CategoryInput
    id: ID @validId(type: CategoryId)
    brands: [ID] @validId(type: BrandId)
    collections: [ID] @validId(type: CollectionId)
    SKUs: [ID] @validId(type: SKUId)
    images: [ID] @validId(type: ImageId)
  ): Category!
  deleteCategory(id: ID! @validId(type: CategoryId)): Boolean
}

extend type Subscription {
  categoryAdded: Category!
  categoryUpdated: Category!
  categoryDeleted: ID!
}
