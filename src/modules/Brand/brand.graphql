type Brand {
  id: ID!
  name: String!
  slug: Slug!
  description: String
  categories: [Category]
  collections: [Collection]
  SKUs: [SKU]
  images: [Image]
}

extend type Query {
  brands: [Brand]!
  brand(id: ID! @validId(type: BrandId)): Brand
}

input BrandInput {
  name: String!
  description: String
}

extend type Mutation {
  addBrand (
    input: BrandInput, 
    categories: [ID] @validId(type: CategoryId),
    collections: [ID] @validId(type: CollectionId),
    SKUs: [ID] @validId(type: SKUId),
    images: [ID] @validId(type: ImageId),
    slug: String
  ):Brand!
  updateBrand (
    input: BrandInput,
    id: ID! @validId(type: BrandId), 
    categories: [ID] @validId(type: CategoryId),
    collections: [ID] @validId(type: CollectionId),
    SKUs: [ID] @validId(type: SKUId),
    images: [ID] @validId(type: ImageId)
  ): Brand!
  deleteBrand(id: ID! @validId(type: BrandId)): Boolean!
}

extend type Subscription {
  brandAdded: Brand!
  brandUpdated: Brand!
  brandDeleted: ID!
}
