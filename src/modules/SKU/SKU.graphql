type SKU {
  id: ID!
  name: String
  slug: Slug!
  quantity: Int!
  price: Int!
  discount: Int
  isPublic: Boolean
  colorType: Color
  sizeType: Size
  brandType: Brand
  bollectionType: Collection
  categoryType: Category
  productType: Product
  images: [Image]
}

input SKUInput {
  name: String!
  slug: String
  quantity: Int!
  price: Int!
  discount: Int
  isPublic: Boolean
}

extend type Query {
  skus: [SKU]!
  sku(id: ID! @validId(type: SKUId)): SKU!
}

extend type Mutation {
  addSKU(
    input: SKUInput!
    slug: String
    color: ID @validId(type: ColorId)
    size: ID @validId(type: SizeId)
    brandType: ID @validId(type: BrandId)
    collectionType: ID @validId(type: CollectionId)
    categoryType: ID @validId(type: CategoryId)
    productType: ID @validId(type: ProductId)
    images: [ID] @validId(type: ImageId)
  ): SKU!
  fakeSKU(
    quantity: Int
    size: ID @validId(type: SizeId)
    brand: ID @validId(type: BrandId)
    collection: ID @validId(type: CollectionId)
    category: ID @validId(type: CategoryId)
    product: ID @validId(type: ProductId)
  ): [SKU]
  updateSKU(
    input: SKUInput!
    id: ID!
    color: ID @validId(type: ColorId)
    size: ID @validId(type: SizeId)
    brandType: ID @validId(type: BrandId)
    collectionType: ID @validId(type: CollectionId)
    categoryType: ID @validId(type: CategoryId)
    productType: ID @validId(type: ProductId)
    images: [ID] @validId(type: ImageId)
  ): SKU!
  deleteSKU(id: ID! @validId(type: SKUId)): Boolean
}

extend type Subscription {
  SKUAdded: SKU!
  SKUUpdated: SKU!
  SKUDeleted: ID!
}
